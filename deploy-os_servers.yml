---
- name: Deploying headnode.
  hosts: user-interface 
  connection: local
  tasks:
##############################################################################
# Configure headnode from inventory using Openstack API.
# NOTE: Openstack RC file must be sourced to be able to use Openstack API.
# RUN: ansible-playbook deploy-os_server.yaml -c local -i {your}_hosts -v
##############################################################################

  - set_fact:
      name: Get headnode name.
      headnode_name: "{{ item }}"
    with_items:
      - "{{ groups['user-interface'] }}"

  - name: create persistent data volume for headnode
    os_volume:
      display_name: "{{ headnode_name }}-volume"
      size: 20
      state: present
      availability_zone: '{{ storage_availability_zone }}'

  - name: Create headnode instance
    os_server:
      state: present
      name: "{{ headnode_name }}"
      image: '{{ image_centos7 }}'
      flavor: '{{ flavor_ui }}'
      security_groups: '{{ security_group_id }}'
      key_name: '{{ key_name }}'
      auto_floating_ip: no
      nics: 
        - net-name: '{{ private_net_id }}'
        - net-name: '{{ private_storage_net_id }}'
      availability_zone: '{{ availability_zone }}'
    register: headnode_vm

  - name: attach headnode data volume
    os_server_volume:
      server: "{{ headnode_name }}"
      volume: "{{ headnode_name }}-volume"

  - name: associated floating IP to headnode.
    os_floating_ip:
      network: '{{ public_net_id  }}'
      server: "{{ headnode_name }}"
      reuse: yes
    register: floating_ip
    
  - name: add headnode to inventory
    add_host:
      name: "{{ headnode_name }}"
      groups: headnode
      ansible_ssh_host: "{{ headnode_vm.openstack.accessIPv4 }}"
      private_ip: "{{ headnode_vm.openstack.private_v4 }}"
      ansible_ssh_user: "{{ cloud_user }}"
      public_ip: "{{ headnode_vm.openstack.accessIPv4 }}"
      
- name: Deploying vcompute nodes.
  hosts: 
    - compute-vm
  connection: local
  tasks:

##############################################################################
# Configure vnode from inventory group 'compute-vm' using Openstack API.
##############################################################################
              
  - name: create persistent data volume for vcompute nodes.
    os_volume:
      display_name: "{{ inventory_hostname }}-volume"
      size: "{{ local_volume_size }}"
      state: present
      availability_zone: "{{ storage_availability_zone }}"

- name: Create vcompute instance
  hosts: 
    - user-interface
  connection: local
  tasks:
  - name: Create instance
    os_server:
      state: present
      name: '{{ item }}'
      image: '{{ image_centos7 }}'
      flavor: '{{ flavor_vcompute }}'
      security_groups: '{{ security_group_id }}'
      key_name: '{{ key_name }}'
      auto_floating_ip: no
      nics: 
        - net-name: '{{ private_net_id }}'
        - net-name: '{{ private_storage_net_id }}'
      availability_zone: '{{ availability_zone }}'
    register: vcompute_vm
    with_items:
      - "{{ groups['compute-vm'] }}"
 
  - name: add node to inventory
    add_host:
      name: "{{item.openstack.name}}"
      groups: nodes
      ansible_ssh_host: "{{ item.server.addresses['Solve-RD_private'] }}"
      private_ip: "{{ item.server.addresses['Solve-RD_private'] | map(attribute='addr') | list | first }}"
      ansible_ssh_user: "{{ cloud_user }}"
    with_items: "{{ vcompute_vm.results }}"
      
- name: attach vcompute data volume
  connection: local
  hosts: 
    - compute-vm
  tasks:
  - name: attach vcompute data volume
    os_server_volume:
      server: "{{ inventory_hostname }}"
      volume: "{{ inventory_hostname }}-volume"

##############################################################################
# Configure /etc/hosts from in-memory inventory
##############################################################################

- name: Configure nodes
  hosts: 
    - all
  become: true
  gather_facts: false
  tasks:
    - name: add entries to /etc/hosts for all cluster members
      lineinfile:
        state: present
        dest: /etc/hosts
        line: "{{ hostvars[item]['private_ip'] }}           {{ item }}"
      with_items: "{{ groups['all'] }}"
