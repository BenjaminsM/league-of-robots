---

- name: 'DEBUG 1: Get group directories form the ldap cache. the main group'
  shell: |
    ldapsearch -LLL -D 'cn=clusteradminumcg,o=asds' -w 'xie8hieRae.z4Le1' -b 'ou=umcg,o=asds' -H 'ldap://172.23.40.249' "(ObjectClass=GroupofNames)" dn | tr "=," "\n" | fgrep "{{ item.1 }}" | grep -e "^{{ item.1 }}$" || true
  register: group_directories
  with_subelements:
    - "{{ lfs_mounts | selectattr('lfs', 'search', 'tmp[0-9]+$') | list }}"
    - 'groups'

- name: 'DEBUG 2: Get subgroup directories with version number form the ldap cache.'
  shell: |
    ldapsearch -LLL -D 'cn=clusteradminumcg,o=asds' -w 'xie8hieRae.z4Le1' -b 'ou=umcg,o=asds' -H 'ldap://172.23.40.249' "(ObjectClass=GroupofNames)" dn | tr "=," "\n" | fgrep "{{ item.1 }}" | grep -v "^{{ item.1 }}$" | grep -- "-v[0-9][0-9]*$" || true
  register: subgroup_directories_version
  with_subelements:
    - "{{ lfs_mounts | selectattr('lfs', 'search', 'tmp[0-9]+$') | list }}"
    - 'groups'

- name: 'DEBUG 3: Get subgroup directories without version number form the ldap cache.'
  shell: |
    ldapsearch -LLL -D 'cn=clusteradminumcg,o=asds' -w 'xie8hieRae.z4Le1' -b 'ou=umcg,o=asds' -H 'ldap://172.23.40.249' "(ObjectClass=GroupofNames)" dn | tr "=," "\n" | fgrep "{{ item.1 }}" | grep -v "^{{ item.1 }}$" | grep -v -- "-v[0-9][0-9]*$"|| true
  register: subgroup_directories
  with_subelements:
    - "{{ lfs_mounts | selectattr('lfs', 'search', 'tmp[0-9]+$') | list }}"
    - 'groups'

- name: 'DEBUG 4: loop over groups and for each group loop over subgroups. Making a dict of main group with sub groups'
  set_fact:
    group_subdir_dict: "{{ group_subdir_dict|default({}) | combine( { item.0.stdout: item.1.stdout.split('\n') | list } ) }}"
  loop: "{{ group_directories.results | zip(subgroup_directories.results)| list }}"

- name: 'DEBUG 5: loop over groups and for each group loop over subgroups. Making a dict of main group with sub groups with version number'
  set_fact:
    group_subdir_version_dict: "{{ group_subdir_version_dict|default({}) | combine( { item.0.stdout: item.1.stdout.split('\n') | list } ) }}"
  loop: "{{ group_directories.results | zip(subgroup_directories_version.results)| list }}"

- name: 'Create "[tmp0*|prm0*]/projects" directory '
  file:
    path: "/mnt/{{ pfs }}/groups/{{ item.stdout }}/{{ lfs }}/projects/"
    owner: "{{ item.stdout }}-dm"
    group: "{{ item.stdout }}"
    mode: "{{ mode }}"
    state: 'directory'
  with_items:
    - "{{ group_directories.results }}"
  when: inventory_hostname in groups['sys-admin-interface']
  become: true
  
- name: 'Create "[tmp0*|prm0*]/releases" directory '
  file:
    path: "/mnt/{{ pfs }}/groups/{{ item.stdout }}/{{ lfs }}/releases/"
    owner: "{{ item.stdout }}-dm"
    group: "{{ item.stdout }}"
    mode: "{{ mode }}"
    state: 'directory'
  with_items:
    - "{{ group_directories.results }}"
  when: inventory_hostname in groups['sys-admin-interface']
  become: true
  
#### er staat /Users/kdelange/Documents/git/ dit is niet handig als iemand anders dit playbook gaat gebruiken.
- name: 'include group vars'
  include_vars: "/Users/kdelange/Documents/git/league-of-robots/group_vars/talos-cluster/vars.yml"

#- name: 'DEBUG 6: Create "tmp08" directory structure for subgroups without version number'
#  debug:
#    msg: "/groups/{{ item.0.key }}/{{ tmpdirectory }}/{{ item.1 | regex_replace('^' + item.0.key + '-(.*)$', '\\1') }}/" 
#  with_subelements:
#    - "{{ group_subdir_dict | dict2items(key_name='key', value_name='value')}}"
#    - 'value'

#- name: 'DEBUG 7: Create "prm08" directory structure for subgroups without version number'
#  debug:
#    msg: "item.0.key is {{ item.0.key }}, item.1 is {{ item.1 }} "
#  with_subelements:
#    - "{{ group_subdir_version_dict | dict2items(key_name='key', value_name='value')}}"
#    - 'value'

- name: 'Create "[tmp0*|prm0*]" directory structure for subgroups without version number'
  file:
    path: "/mnt/{{ pfs }}/groups/{{ item.0.key }}/{{ lfs }}/{{ item.1 | regex_replace('^' + item.0.key + '-(.*)$', '\\1') }}/" 
    owner: "{{ item.0.key }}-dm"
    group: "{% if item.1 | length %}{{ item.1 }}{% else %}{{ item.0.key }}{% endif %}"
    mode: "{{ mode }}"
    state: 'directory'
  with_subelements:
    - "{{ group_subdir_dict | dict2items(key_name='key', value_name='value')}}"
    - 'value'
  when: inventory_hostname in groups['sys-admin-interface']
  become: true

### voor alle main groups, umcg-atd, umcg-gcc en umcg-lifelines, word nu ook een release en een projects map gemaakt, is dat erg?

- name: 'Create "[tmp0*|prm0*]/projects" directory structure for subgroups without version number'
  file:
    path: "/mnt/{{ pfs }}/groups/{{ item.0.key }}/{{ lfs }}/projects/{{ item.1 | regex_replace('^' + item.0.key + '-(.*)$', '\\1') }}/"
    owner: "{{ item.0.key }}-dm"
    group: "{% if item.1 | length %}{{ item.1 }}{% else %}{{ item.0.key }}{% endif %}"
    mode: "{{ mode }}"
    state: 'directory'
  with_subelements:
    - "{{ group_subdir_dict | dict2items(key_name='key', value_name='value')}}"
    - 'value'
  when: inventory_hostname in groups['sys-admin-interface']
  become: true

- name: 'Create "prm08/releases" directory structure for subgroups with version number'
  file:
    path: "/mnt/{{ pfs }}/groups/{{ item.0.key }}/{{ lfs }}/releases/{{ item.1 | regex_replace('^' + item.0.key + '-(.*)-(v[0-9][0-9]*)$', '\\1/\\2') }}/ "
    owner: "{{ item.0.key }}-dm"
    group: "{% if item.1 | length %}{{ item.1 }}{% else %}{{ item.0.key }}{% endif %}"
    mode: "{{ mode }}"
    state: 'directory'
  with_subelements:
    - "{{ group_subdir_version_dict | dict2items(key_name='key', value_name='value')}}"
    - 'value'
  when: inventory_hostname in groups['sys-admin-interface']
  become: true

...
